'use client';

import { useEffect } from 'react';



export default function GetRegistrationsPage() {
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º title —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    useEffect(() => {
        document.title = 'Private Data';
        
        // –î–æ–±–∞–≤–ª—è–µ–º meta —Ç–µ–≥ –¥–ª—è –∑–∞–ø—Ä–µ—Ç–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏
        const metaRobots = document.createElement('meta');
        metaRobots.name = 'robots';
        metaRobots.content = 'noindex, nofollow, noarchive';
        document.head.appendChild(metaRobots);

        // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        return () => {
        document.head.removeChild(metaRobots);
        };
    }, []);

    async function handleGetData() {
        try {
        console.log('üîÑ –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ MySQL...');
        
        const response = await fetch('/api/get-data');
        
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
        }
        
        const data = await response.json();
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ MySQL');
        
        // –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª –∏ —Å–∫–∞—á–∏–≤–∞–µ–º
        await downloadExcel(data);
        
        } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);
        }
    }

    function downloadExcel(data) {
        if (data.length === 0) {
            alert('üì≠ –í —Ç–∞–±–ª–∏—Ü–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
            return;
        }

        // –°–æ–∑–¥–∞–µ–º CSV —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–ø—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ Excel)
        let csvContent = 'ID;–§–ò–û;Email;–†–µ–≥–∏–æ–Ω;–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n';
        
        data.forEach(item => {
        const row = [
            item.id,
            `"${item.fio}"`, // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ –∫–∞–≤—ã—á–∫–∏ –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø—è—Ç—ã–µ
            `"${item.email}"`,
            `"${item.region}"`,
            `"${new Date(item.created_at).toLocaleString('ru-RU')}"`
        ].join(';');
        
        csvContent += row + '\n';
        });

        // –°–æ–∑–¥–∞–µ–º Blob –∏ —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        const blob = new Blob(['\uFEFF' + csvContent], { 
            type: 'text/csv;charset=utf-8;' 
        });
        
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        const timestamp = new Date().toISOString().slice(0, 19).replace(/:/g, '-');
        
        link.href = url;
        link.setAttribute('download', `registrations_${timestamp}.csv`);
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url);
        
        console.log(`üìä –°–∫–∞—á–∞–Ω —Ñ–∞–π–ª —Å ${data.length} –∑–∞–ø–∏—Å—è–º–∏`);
    }

    return (
        <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif', maxWidth: '800px', margin: '0 auto' }}>
            <h1>üîí –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π</h1>
            <p style={{ color: '#666' }}>–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞—Ö</p>
            
            <button 
                onClick={handleGetData}
                style={{
                padding: '12px 24px',
                fontSize: '16px',
                backgroundColor: '#10b981',
                color: 'white',
                border: 'none',
                borderRadius: '8px',
                cursor: 'pointer',
                marginTop: '20px',
                fontWeight: 'bold'
                }}
                onMouseOver={(e) => e.target.style.backgroundColor = '#059669'}
                onMouseOut={(e) => e.target.style.backgroundColor = '#10b981'}
            >
                üìä –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Excel
            </button>
            
            <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#f3f4f6', borderRadius: '8px' }}>
                <p style={{ margin: 0, color: '#374151' }}>
                üí° <strong>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</strong> –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel (CSV)
                </p>
                <ul style={{ margin: '10px 0 0 20px', color: '#374151' }}>
                    <li>–§–∞–π–ª –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV</li>
                    <li>CSV —Ñ–∞–π–ª—ã –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –≤ Excel, Google Sheets –∏ –¥—Ä—É–≥–∏—Ö —Ç–∞–±–ª–∏—á–Ω—ã—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞—Ö</li>
                    <li>–§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –ø–æ–ª—è: ID, –§–ò–û, Email, –†–µ–≥–∏–æ–Ω, –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</li>
                </ul>
            </div>
        </div>
    );
}